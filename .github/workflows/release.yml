name: Release

on:
  push:
    tags:
      - "*"

jobs:
  release-windows:
    runs-on: windows-latest

    steps:
      - uses: olegtarasov/get-tag@v2.1.2
        id: get_version

      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Build
        run: |
          cargo build --release --target x86_64-pc-windows-msvc

      - uses: Leafwing-Studios/cargo-cache@v2

      - name: Prepare client package
        run: |
          mkdir windows-client
          cp target/x86_64-pc-windows-msvc/release/client.exe windows-client/
          mkdir assets -ea 0
          cp -r assets windows-client/

      - name: Package client
        run: |
          Compress-Archive -Path windows-client/* -DestinationPath client.zip

      - name: Upload client to artifacts
        uses: actions/upload-artifact@v4
        with:
          path: client.zip
          name: windows-client
          retention-days: 1

      - name: Upload client to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: client.zip
          asset_name: client-windows-${{ steps.get_version.outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true

      - name: Prepare server package
        run: |
          mkdir windows-server
          cp target/x86_64-pc-windows-msvc/release/server.exe windows-server/
          mkdir assets -ea 0
          cp -r assets windows-server/

      - name: Package server
        run: |
          Compress-Archive -Path windows-server/* -DestinationPath server.zip

      - name: Upload server to artifacts
        uses: actions/upload-artifact@v4
        with:
          path: server.zip
          name: windows-server
          retention-days: 1

      - name: Upload server to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: server.zip
          asset_name: server-windows-${{ steps.get_version.outputs.tag }}.zip
          tag: ${{ github.ref }}
          overwrite: true

  deployToSteam:
    needs: release-windows
    runs-on: ubuntu-latest
    steps:
      - uses: game-ci/steam-deploy@v3.0.4
        with:
          username: ${{ secrets.STEAM_USERNAME }}
          configVdf: ${{ secrets.STEAM_CONFIG_VDF }}
          appId: 1513980
          buildDescription: ${{ steps.get_version.outputs.tag }}
          rootPath: build
          depot1Path: StandaloneWindows64
          releaseBranch: prerelease
